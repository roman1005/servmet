# Generated by Django 3.0.6 on 2020-07-20 08:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('app1', '0002_auto_20200703_1121'),
    ]

    operations = [
        migrations.AlterField(
            model_name='historicalmetric',
            name='publ_regularity',
            field=models.CharField(blank=True, choices=[('', ''), ('daily', 'daily'), ('weekly', 'weekly'), ('monthly', 'monthly'), ('quaterly', 'quaterly'), ('half-year', 'half-year'), ('yearly', 'yearly')], default='', max_length=100, verbose_name='Publication Regularity'),
        ),
        migrations.AlterField(
            model_name='metric',
            name='publ_regularity',
            field=models.CharField(blank=True, choices=[('', ''), ('daily', 'daily'), ('weekly', 'weekly'), ('monthly', 'monthly'), ('quaterly', 'quaterly'), ('half-year', 'half-year'), ('yearly', 'yearly')], default='', max_length=100, verbose_name='Publication Regularity'),
        ),
        migrations.AlterField(
            model_name='metricvalue',
            name='metric',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app1.Metric'),
        ),
        migrations.CreateModel(
            name='HistoricalMetricValueRegistration',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('date_begin', models.DateTimeField(blank=True, editable=False)),
                ('date_end', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Updated at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('metric', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='app1.Metric')),
                ('metricValue', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='app1.MetricValue')),
            ],
            options={
                'verbose_name': 'historical Metric value registration',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='MetricValueRegistration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_begin', models.DateTimeField(auto_now_add=True)),
                ('date_end', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated at')),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app1.Metric')),
                ('metricValue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='app1.MetricValue')),
            ],
            options={
                'verbose_name': 'Metric value registration',
                'unique_together': {('metric', 'date_begin', 'date_end')},
            },
        ),
    ]
