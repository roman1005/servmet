# Generated by Django 3.0.6 on 2020-06-24 11:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phone_field.models
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('design_id', models.IntegerField(default=0)),
                ('metric_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('date_begin', models.DateTimeField(auto_now=True, null=True)),
                ('date_end', models.DateTimeField(auto_now=True, null=True)),
                ('status', models.CharField(choices=[('DEF', 'Defined'), ('SUB', 'Submited'), ('DEP', 'Deployed'), ('OP', 'Operational'), ('RETU', 'Retired(Upgrade)'), ('RETR', 'Retired(Replacemenet)'), ('RETO', 'Retired(Obsolete)'), ('CANU', 'Cancelled(Upgrade)'), ('CANR', 'Cancelled(Replacemenet)'), ('EXT', 'External premises'), ('UNCO', 'Under consideration'), ('UNK', 'Unknown'), ('DIS', 'Displaced'), ('NA', 'Not agreed')], default='DEF', max_length=4)),
                ('metric_order', models.IntegerField()),
                ('nature', models.CharField(max_length=300)),
                ('publ_regularity', models.CharField(blank=True, default='', max_length=100, verbose_name='Publication Regularity')),
                ('publ_deadline', models.CharField(blank=True, default='', max_length=100, verbose_name='Publication Deadline')),
                ('measr_regularity', models.CharField(default='', max_length=100, verbose_name='Measure Regularity')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('phone_number', phone_field.models.PhoneField(blank=True, max_length=31, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('design_id', models.IntegerField(unique=True)),
                ('service_name', models.CharField(max_length=100, unique=True)),
                ('portfolio', models.CharField(max_length=250)),
                ('sub_portfolio', models.CharField(max_length=250)),
                ('status', models.CharField(choices=[('DEF', 'Defined'), ('SUB', 'Submited'), ('DEP', 'Deployed'), ('OP', 'Operational'), ('RETU', 'Retired(Upgrade)'), ('RETR', 'Retired(Replacemenet)'), ('RETO', 'Retired(Obsolete)'), ('CANU', 'Cancelled(Upgrade)'), ('CANR', 'Cancelled(Replacemenet)'), ('EXT', 'External premises'), ('UNCO', 'Under consideration'), ('UNK', 'Unknown'), ('DIS', 'Displaced'), ('NA', 'Not agreed')], default='DEF', max_length=4)),
                ('totalorder', models.CharField(blank=True, max_length=100, null=True, verbose_name='Total order')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='customerID', to='app1.Staff')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ownerID', to='app1.Staff')),
            ],
        ),
        migrations.CreateModel(
            name='MetricValue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('value', models.FloatField(verbose_name='Metric value')),
                ('date_begin', models.DateTimeField()),
                ('date_end', models.DateTimeField()),
                ('metric', models.ForeignKey(blank=0, on_delete=django.db.models.deletion.PROTECT, to='app1.Metric')),
            ],
            options={
                'verbose_name': 'Metric value',
            },
        ),
        migrations.CreateModel(
            name='MetricMeasurement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_begin', models.DateTimeField()),
                ('date_end', models.DateTimeField()),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app1.Metric')),
            ],
        ),
        migrations.AddField(
            model_name='metric',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app1.Service'),
        ),
        migrations.CreateModel(
            name='HistoricalStaff',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=100)),
                ('phone_number', phone_field.models.PhoneField(blank=True, max_length=31, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical staff',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalService',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('design_id', models.IntegerField(db_index=True)),
                ('service_name', models.CharField(db_index=True, max_length=100)),
                ('portfolio', models.CharField(max_length=250)),
                ('sub_portfolio', models.CharField(max_length=250)),
                ('status', models.CharField(choices=[('DEF', 'Defined'), ('SUB', 'Submited'), ('DEP', 'Deployed'), ('OP', 'Operational'), ('RETU', 'Retired(Upgrade)'), ('RETR', 'Retired(Replacemenet)'), ('RETO', 'Retired(Obsolete)'), ('CANU', 'Cancelled(Upgrade)'), ('CANR', 'Cancelled(Replacemenet)'), ('EXT', 'External premises'), ('UNCO', 'Under consideration'), ('UNK', 'Unknown'), ('DIS', 'Displaced'), ('NA', 'Not agreed')], default='DEF', max_length=4)),
                ('totalorder', models.CharField(blank=True, max_length=100, null=True, verbose_name='Total order')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('customer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='app1.Staff')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='app1.Staff')),
            ],
            options={
                'verbose_name': 'historical service',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMetricValue',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('value', models.FloatField(verbose_name='Metric value')),
                ('date_begin', models.DateTimeField()),
                ('date_end', models.DateTimeField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('metric', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='app1.Metric')),
            ],
            options={
                'verbose_name': 'historical Metric value',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMetricMeasurement',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('date_begin', models.DateTimeField()),
                ('date_end', models.DateTimeField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('metric', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='app1.Metric')),
            ],
            options={
                'verbose_name': 'historical metric measurement',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMetric',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('design_id', models.IntegerField(default=0)),
                ('metric_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('date_begin', models.DateTimeField(blank=True, editable=False, null=True)),
                ('date_end', models.DateTimeField(blank=True, editable=False, null=True)),
                ('status', models.CharField(choices=[('DEF', 'Defined'), ('SUB', 'Submited'), ('DEP', 'Deployed'), ('OP', 'Operational'), ('RETU', 'Retired(Upgrade)'), ('RETR', 'Retired(Replacemenet)'), ('RETO', 'Retired(Obsolete)'), ('CANU', 'Cancelled(Upgrade)'), ('CANR', 'Cancelled(Replacemenet)'), ('EXT', 'External premises'), ('UNCO', 'Under consideration'), ('UNK', 'Unknown'), ('DIS', 'Displaced'), ('NA', 'Not agreed')], default='DEF', max_length=4)),
                ('metric_order', models.IntegerField()),
                ('nature', models.CharField(max_length=300)),
                ('publ_regularity', models.CharField(blank=True, default='', max_length=100, verbose_name='Publication Regularity')),
                ('publ_deadline', models.CharField(blank=True, default='', max_length=100, verbose_name='Publication Deadline')),
                ('measr_regularity', models.CharField(default='', max_length=100, verbose_name='Measure Regularity')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='app1.Service')),
            ],
            options={
                'verbose_name': 'historical metric',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
